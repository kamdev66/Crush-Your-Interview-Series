------------------------CallBack function-----------------------------
:- callback function is a function which is passed to another function as a parameter.
:- callback functions nowadays are replaced with promises and async/await.
:- callback function is used when there is an asynchronus process.


:- Syntax of callback function:-
fName(function(param1,param2,......paramN){
    //statements
})

Asynchronus process:- A process which takes some time to execute is an Asynchronus Process, i.e. it won't execute immediately.It needs some time to finish this Job.

let data;
function fetchData(){
setTimeout(()=>{
data={pCode:1001,pName:"Apple"};
},2000);
}
function displayData(){
console.log(data);
console.log("Ends here");
}
console.log("starts here");
fetchData();
displayData();

/*output:- 
starts here
undefined
Ends here
*/
-------------------------------------------------------
:---->>>>>By using CallBack function:-
let data;
function fetchData(cb){
setTimeout(()=>{
data={pCode:1001,pName:"Apple"};
cb();
},2000);
}
console.log("starts here");
fetchData(function(){
console.log(data);
console.log("Ends here");
});


/*output:- 
starts here
{
  pCode: 1001,
  pName: "Apple"
}
Ends here
*/

------------Most Appropriate way of writing CallBack Function------------------

function fetchData(cb){
setTimeout(()=>{
let data={pCode:1001,pName:"Apple"};
cb(data);
},2000);
}
console.log("starts here");
fetchData(function(data){
console.log(data);
console.log("Ends here");
});
/*output:- 
starts here
{
  pCode: 1001,
  pName: "Apple"
}
Ends here
*/

----------------------------------------------------------------------
CallBack hell/pyramid of doom:- If you have more processes to deal with, if you have 3 or more than 3 level of callback function to deal with,is known as Callback hell/pyramid of doom.
















