--------------------FETCH API-----------------------------
:-FETCH API is a better,faster and more efficient way to deal with Http or network requests.
:- after es6,we use FETCH API.

syntax:-
const responsePromise=fetch(url,[optional object])
here, 
url=resources where you want to make the request.
optional object=optional object literal.If this is not mentioned,it becomes a GET request.

:- To make a POST request ,this optional object will look like this:-
syntax:-
const response=fetch('http://URL',{
    method:'POST',
    headers:{
        'Content-Type':'application/json;charset=utf-8'
    },
    body:JSON.stringify(data)
})

Note:-like method,headers and body,there are other options like mode,cache,redirect etc.


-----------------------------------------------------------------------------------------


async function fetchData(){
const response=await fetch('https://jsonplaceholder.typicode.com/comments')
console.log(response);       
}
fetchData();

/*
//output:- Response {type: 'cors', url: 'https://jsonplaceholder.typicode.com/comments', redirected: false, status: 200, ok: true, …}
*/

agar hum console.log(response) ke place pr console.log(response.body) krenge to ye output aayega    //output:- ReadableStream {locked: false}    

Note:-if we read response.body,it will be the constantly receiving data from server.

-------------by using async/await----------------------------------------------------------------------

async function fetchData(){
let data;
const response=await fetch('https://jsonplaceholder.typicode.com/comments')
if(response.ok){
data=await response.json();   //or we can write data=await response.text();
console.log(data);
}  
}
fetchData();

--------------------------------------------------------------------------

Note:- data=await response.blob();  //blob will read the binary data. 

--------------------by using promises(more preferrable)---------------------------------------
fetch('https://jsonplaceholder.typicode.com/comments')
     .then(res=>res.json())
     .then(data=>console.log(data));

---------------------------------------------------------------------------------------------

--------------------------POST request-----------------
const todo={
userId:1001,
id:1,
title:'New Titled',
completed:false
}
fetch('https://jsonplaceholder.typicode.com/todos',{
method:'POST',
headers:{
'Content-Type':'application/json;charset=utf-8'
},
body:JSON.stringify(todo)
}).then(res=>console.log(res))

//Note:- status: 201 means post request will be successfully made.
//post krte time stringify(),get krte time .json() use karte hai.

--------------------------------------------------------------------

async function fetchData(){
let data;
const response=await fetch('https://jsonplaceholder.typicode.com/comments')
console.log(response.headers);    //Headers {}
console.log(response.headers.get('Content-Type'));    //application/json; charset=utf-8
}
fetchData();

--------------------------------------------------------------------
Note:- fetch API can also work with images.

Ques:- Explain the fetch API functionality?
:- It helps in making an AJAX call.
:- Perform CRUD operations.
:- Downloading/uploading files-dealing with images etc.



