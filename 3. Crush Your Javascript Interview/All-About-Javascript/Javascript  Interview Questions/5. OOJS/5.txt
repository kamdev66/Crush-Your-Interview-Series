----------------Inheritance(subclassing) and extending built-in------------------

:- with es5,there were different ways of inheritance,
but in es6, "extends" is the keyword to inherit a class.

:- Inheritance is needed when you have unique or common members.
:- whatever member we have in the parent are available/accessible for an object of the "Child" class. 

:-->>>here , we use String class(which is a build-in) as a parent.
class Child extends String{
noc(str){
console.log(str.length);                //15
}
}
const obj=new Child("Test string");
console.log(obj.toLocaleLowerCase())  //test string
obj.noc("new string here");

----------------------------------------------------------
how do we create the class and extend the class?
:-
class Parent{
constructor(a){
console.log("Parent");   //"Parent"
this.a=a;
}
pMethod(){
console.log("P Method ",this.a); //"P Method ", 12
}
}
class Child extends Parent{

}
const obj=new Child(12);
obj.pMethod();


Note:- super() keyword is used to call the constructor of the parent class .

class Parent{
constructor(a){
console.log("Parent");   //"Parent"
this.a=a;
}
pMethod(){
console.log("P Method ",this.a); //"P Method ", 12
}
}
class Child extends Parent{
constructor(a){
super(a);
}
cMethod(){
super.pMethod();
}
}
const obj=new Child(12);
obj.pMethod();

------------------------------------------------------
super()-call parent constructor
super.method()-call parent method
super.property - access parent properties

Ques:- what is subclassing?
:- In es6, Inheritance is called subclassing.