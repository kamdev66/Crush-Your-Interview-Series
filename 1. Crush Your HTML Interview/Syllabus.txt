1. What is HTML and how is it different from XHTML?
What are the new features in HTML5, and how do they differ from previous versions?
2. Explain the purpose of the <!DOCTYPE> declaration in HTML.
3. Differentiate between inline and block-level elements in HTML.
4. Describe the use of the <meta> tag and its attributes.
5. What is the purpose of the <head> and <body> tags in an HTML document?
6. Explain the importance of the alt attribute in the <img> tag.
7. How does the <a> tag contribute to creating hyperlinks in HTML?
8. Describe the difference between <div> and <span> tags.
9. Explain the concept of semantic HTML and provide examples.
10. What is the purpose of the <form> tag in HTML?
11. How can you include comments in HTML?
12. What is the significance of the <table> element in HTML?
13. Explain the difference between the <script> tag with the async and defer attributes.
14. How can you embed audio and video in HTML using native elements?
15. Describe the role of the <nav> element in HTML5.
16. What is the purpose of the <aside> tag in HTML?
17. Explain the concept of HTML entities and provide examples.
18. How can you create ordered and unordered lists in HTML?
19. What is the purpose of the <header> and <footer> tags in HTML5?
20. Describe the use of the <abbr> and <cite> tags.
21. How do you create a hyperlink that opens in a new tab or window?
22. Explain the difference between the <strong> and <b> tags.
23. Describe the role of the <figure> and <figcaption> elements.
24. How can you create a responsive design in HTML?
25. Explain the use of the <details> and <summary> tags.
26. What is the purpose of the <main> tag in HTML5?
27. How can you embed external CSS styles in an HTML document?
28. Explain the concept of HTML5 data attributes.
29. How do you create a dropdown list in HTML?
30. Describe the purpose of the <canvas> element in HTML5.
31. Explain the difference between GET and POST methods in HTML forms.
32. How can you disable a form element using HTML?
33. Describe the purpose of the <progress> and <meter> elements.
34. How do you set the background image in HTML?
35. Explain the role of the <iframe> tag and its attributes.
36. What is the purpose of the colspan and rowspan attributes in a table?
37. How can you create a horizontal line in HTML?
38. Describe the use of the <datalist> element in HTML forms.
39. Explain the role of the <blockquote> and <q> tags.
40. How can you create a responsive image in HTML?
Can you explain the box model in HTML and CSS?
How do you create responsive designs in HTML and CSS?
What are the benefits of using a CSS preprocessor, such as SASS or LESS?
should we have more than one h1 tags ?
Difference between canvas and svg ?

TODO: What is the use of 'alt' attribute in 'img' tag ?
:- The alt attribute in the <img> tag is used to provide alternative text that is displayed in place of the image if the image cannot be displayed, 


TODO: Difference between attribute and property :-
:- The key difference between an attribute and a property is that attributes are defined in HTML markup and can be set or changed using JavaScript, whereas properties are JavaScript values that correspond to attributes and can be accessed and modified directly through JavaScript.
:- It is worth noting that some attributes and properties have the same name, such as the id attribute and the id property.


TODO: Describe the process you follow for cross-browser compatibility testing, and what tools do you use to accomplish this?
:- Cross-browser compatibility testing is an important step in web development to ensure that a website works as intended across different web browsers and versions.
:- Use browser testing tools: There are several browser testing tools available that allow developers to test their websites across different browsers and devices. Some popular ones include BrowserStack, Sauce Labs, CrossBrowserTesting, and LambdaTest.
:- Manual testing: While browser testing tools are useful, it's important to manually test the website on each browser to ensure that everything is working as expected. This may involve testing different features, such as forms, videos, and animations, to ensure that they work correctly.


TODO: Difference between async and defer in html ?
:- Both `async` and `defer` are attributes used in HTML to control how scripts are loaded and executed on a web page.
:- The key difference between async and defer is when the scripts are executed. With async, the script is executed as soon as it is downloaded, potentially before the rest of the page has finished loading. With defer, the script is executed after the rest of the page has finished loading.

TODO: How is dom rendered by browser?
:- When a browser receives an HTML document, it first parses the HTML to create a Document Object Model (DOM) tree. The DOM is a hierarchical representation of the HTML document, where each HTML element is represented as a node in the tree.
:- Once the DOM tree is created, the browser goes through a process called layout or reflow. During this process, the browser determines the size and position of each element on the page based on the CSS styles applied to each element and the layout rules defined by the browser.
:- The rendering process is optimized by modern browsers through techniques such as pre-fetching, caching, and lazy-loading of resources, and incremental rendering to improve page load times and performance.

How do you optimize images in HTML for faster loading times?
:- Compress images: Compressing images reduces their file size without significantly reducing image quality. There are several image compression tools available that you can use to compress images before uploading them to your website.
:- Resize images: Large images take longer to load, so it's important to resize images to their appropriate dimensions before uploading them.
:- Use appropriate file types: Different file types have different file sizes and loading times. JPEG is the best option for photographs, while PNG is better for graphics and images with transparency. GIFs are good for animated images, and SVG is ideal for vector graphics.
:- Use CDN: Content Delivery Networks (CDNs) cache your images on servers located around the world, making them load faster for users in different regions. You can use a CDN to store and serve your images, reducing the load on your website's server and improving page load times.
:- Lazy loading: Lazy loading is a technique where images are loaded only when they are visible in the user's viewport, rather than loading all images at once. This helps reduce page load times and improve performance
